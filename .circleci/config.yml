version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.3.2

executors:
  golang:
    docker:
      - image: cimg/go:1.17.9
    resource_class: 2xlarge
  ubuntu:
    docker:
      - image: ubuntu:20.04
  packer:
    description: |
      The HashiCorp provided Packer container
    parameters:
      packer-version:
        type: string
        default: "1.8"
    docker:
      - image: hashicorp/packer:<< parameters.packer-version >>


commands:
  install-deps:
    steps:
      - run: |
          sudo apt update
          sudo apt install python-is-python3
  prepare:
    parameters:
      linux:
        default: true
        description: is a linux build environment?
        type: boolean
      darwin:
        default: false
        description: is a darwin build environment?
        type: boolean
    steps:
      - checkout
      - git_fetch_all_tags
      - checkout
      - when:
          condition: << parameters.linux >>
          steps:
            - run: sudo apt-get update
            - run: sudo apt-get install ocl-icd-opencl-dev libhwloc-dev
      - when:
          condition: <<parameters.darwin>>
          steps:
            - run:
               name: Install Go
               command: |
                 curl https://dl.google.com/go/go1.17.9.darwin-amd64.pkg -o /tmp/go.pkg && \
                 sudo installer -pkg /tmp/go.pkg -target /
            - run:
                name: Export Go
                command: |
                 echo 'export GOPATH="${HOME}/go"' >> $BASH_ENV
            - run: go version
            - run:
                name: Install pkg-config, goreleaser, and sha512sum
                command: HOMEBREW_NO_AUTO_UPDATE=1 brew install pkg-config goreleaser/tap/goreleaser coreutils
            - run:
                name: Install Rust
                command: |
                  curl https://sh.rustup.rs -sSf | sh -s -- -y
            - run:
                name: Install hwloc
                command: |
                  mkdir ~/hwloc
                  curl --location https://download.open-mpi.org/release/hwloc/v2.4/hwloc-2.4.1.tar.gz --output ~/hwloc/hwloc-2.4.1.tar.gz
                  cd ~/hwloc
                  tar -xvzpf hwloc-2.4.1.tar.gz
                  cd hwloc-2.4.1
                  ./configure && make && sudo make install
      - run: git submodule sync
      - run: git submodule update --init
  download-params:
    steps:
      - restore_cache:
          name: Restore parameters cache
          keys:
            - 'v26-2k-lotus-params'
          paths:
            - /var/tmp/filecoin-proof-parameters/
      - run:  ./lotus fetch-params 2048
      - save_cache:
          name: Save parameters cache
          key: 'v26-2k-lotus-params'
          paths:
            - /var/tmp/filecoin-proof-parameters/
  install_ipfs:
    steps:
      - run: |
          apt update
          apt install -y wget
          wget https://github.com/ipfs/go-ipfs/releases/download/v0.12.2/go-ipfs_v0.12.2_linux-amd64.tar.gz
          wget https://github.com/ipfs/go-ipfs/releases/download/v0.12.2/go-ipfs_v0.12.2_linux-amd64.tar.gz.sha512
          if [ "$(sha512sum go-ipfs_v0.12.2_linux-amd64.tar.gz)" != "$(cat go-ipfs_v0.12.2_linux-amd64.tar.gz.sha512)" ]
          then
            echo "ipfs failed checksum check"
            exit 1
          fi
          tar -xf go-ipfs_v0.12.2_linux-amd64.tar.gz
          mv go-ipfs/ipfs /usr/local/bin/ipfs
          chmod +x /usr/local/bin/ipfs
  install_ipfs_macos:
    steps:
      - run: |
          curl -O https://dist.ipfs.io/kubo/v0.14.0/kubo_v0.14.0_darwin-amd64.tar.gz
          tar -xvzf kubo_v0.14.0_darwin-amd64.tar.gz
          pushd kubo
          sudo bash install.sh
          popd
          rm -rf kubo/
          rm kubo_v0.14.0_darwin-amd64.tar.gz
  git_fetch_all_tags:
    steps:
      - run:
          name: fetch all tags
          command: |
            git fetch --all
  packer_build:
    description: "Run a packer build"
    parameters:
      template:
        description: |
          The name of the packer template file
        type: string
        default: packer.json
      args:
        description: |
          Arguments to pass to the packer build command
        type: string
        default: ""

    steps:
      - run:
          name: "Run a packer build"
          command: packer build << parameters.args >> << parameters.template >>
          no_output_timeout: 30m

jobs:
  release:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run:
          name: publish release
          command: goreleaser release --rm-dist
  release-dry-run:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run:
          name: publish release
          command: goreleaser release --snapshot --rm-dist
  release-macos:
    description: use goreleaser for macos
    macos:
      xcode: "12.5.0"
    working_directory: ~/go/src/github.com/filecoin-project/lotus
    steps:
      - prepare:
          linux: false
          darwin: true
      - install_ipfs_macos
      - restore_cache:
          name: restore cargo cache
          key: v3-go-deps-{{ arch }}-{{ checksum "~/go/src/github.com/filecoin-project/lotus/go.sum" }}
      - run: goreleaser release --rm-dist
      - run: ./scripts/generate-checksums.sh
      - run: ./scripts/publish-checksums.sh

workflows:
  version: 2.1
  ci:
    jobs:
      - release-macos:
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+(-rc\d+)?$/
